trigger:
  - main                 # Run pipeline when code is pushed to main branch

pool:
  vmImage: 'windows-latest'  # Use a Microsoft-hosted build agent with Windows

variables:
  buildConfiguration: 'Release'  # Optional: specify build config (like Debug or Release)

steps:
- task: UseDotNet@2             # Install .NET SDK
  inputs:
    packageType: 'sdk'
    version: '8.0.x'

- script: |
    dotnet build MyDotNetApp --configuration $(buildConfiguration)
  displayName: 'Build project'
  
- task: DotNetCoreCLI@2
  displayName: 'Run unit tests (placeholder)'
  inputs:
    command: 'test'
    projects: '**/*Tests.csproj'
    arguments: '--configuration $(buildConfiguration)'
    publishTestResults: true
    testRunTitle: 'Unit Tests'


- task: DotNetCoreCLI@2         # Publish compiled output
  inputs:
    command: 'publish'
    publishWebProjects: true
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: true

- task: PublishBuildArtifacts@1  # Save the published files for deployment
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'

- task: AzureWebApp@1
  inputs:
    azureSubscription: 'AzureDevOpsHandsOn'  # Change this to your actual service connection name
    appType: 'webApp'
    appName: 'dotnet-devops-demo-westus3'         # Must match your App Service name exactly
    package: '$(Build.ArtifactStagingDirectory)/**/*.zip'
